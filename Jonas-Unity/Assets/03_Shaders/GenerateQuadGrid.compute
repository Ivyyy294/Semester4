// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CreateVertices
#pragma kernel CreateTriangles

RWStructuredBuffer <float3> Vertices;
RWStructuredBuffer <int> Triangles;

float QuadSize;
int Columns;
int Rows;

//Wave


[numthreads(8, 1 ,8)]
void CreateVertices (uint3 id : SV_DispatchThreadID)
{
	if (id.x > Rows || id.z > Columns)
		return;

	int index = id.x + (id.z * (Columns + 1));
	Vertices[index] = float3 (id.z * QuadSize, 0, id.x * QuadSize);
}

[numthreads (8, 1, 8)]
void CreateTriangles (uint3 id : SV_DispatchThreadID)
{
	if (id.x >= Rows || id.z >= Columns)
		return;

	int currentVertice = (id.x * Columns * 6) + (id.z * 6);

	int vBase = id.z + (id.x * (Columns + 1));
	int columnOffset = Columns + 1;

	Triangles[currentVertice++] = vBase;
	Triangles[currentVertice++] = vBase + 1;
	Triangles[currentVertice++] = vBase + columnOffset;

	Triangles[currentVertice++] = vBase + 1;
	Triangles[currentVertice++] = vBase + columnOffset + 1;
	Triangles[currentVertice++] = vBase + columnOffset;
}